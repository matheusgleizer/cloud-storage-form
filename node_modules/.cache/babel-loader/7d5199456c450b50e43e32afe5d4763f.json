{"ast":null,"code":"import * as yup from \"yup\";\n\nvar valid = require(\"card-validator\");\n\nconst validationSchema = yup.object({\n  lastName: yup.string().min(3, \"Last name must be at least 3 characters.\").max(50, \"Last name too long.\").required(\"Last name is required.\"),\n  firstName: yup.string().min(3, \"First name must be at least 3 characters.\").max(50, \"First name too long\").required(\"First name is required.\"),\n  email: yup.string().email(\"E-mail not valid.\").required(\"E-mail is required.\"),\n  address: yup.string().required(\"Address is required.\"),\n  cardNumber: yup.string().min(16, \"Card number must be at least 16 numbers.\").max(18, \"Card number invalid.\").required(\"Credit card is required.\"),\n  expiration: yup.date().required(\"Expiration date is required\"),\n  securityCode: yup.string().min(3, \"Security code must be at least 3 numbers.\").max(4, \"Security code invalid.\").required(\"Security code is required.\") //   cardNumber: yup\n  //     .string()\n  //     .test(\n  //       \"test-number\",\n  //       \"Credit Card number is invalid\",\n  //       (value) => valid.number(value).isValid\n  //     )\n  //     .required(\"Credit card number is required.\"),\n  //   expiration: yup\n  //     .string()\n  //     .test(                                                                  //Credit card validation - disabled for test reasons\n  //       \"test-expiration\",\n  //       \"Expiration date is invalid\",\n  //       (value) => valid.expirationDate(value).isValid\n  //     )\n  //     .required(\"Expiration date is required.\"),\n  //   securityCode: yup\n  //     .string()\n  //     .test(\n  //       \"test-cvv\",\n  //       \"Security code is invalid\",\n  //       (value) => valid.cvv(value).isValid\n  //     )\n  //     .required(\"Security code is required\"),\n\n});\nexport { validationSchema };","map":{"version":3,"sources":["/home/dcil164/Documents/Deployed Projects/cloud-storage-form/src/components/form/validationSchema.js"],"names":["yup","valid","require","validationSchema","object","lastName","string","min","max","required","firstName","email","address","cardNumber","expiration","date","securityCode"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AAGA,MAAMC,gBAAgB,GAAGH,GAAG,CAACI,MAAJ,CAAW;AAChCC,EAAAA,QAAQ,EAAEL,GAAG,CACRM,MADK,GAELC,GAFK,CAED,CAFC,EAEE,0CAFF,EAGLC,GAHK,CAGD,EAHC,EAGG,qBAHH,EAILC,QAJK,CAII,wBAJJ,CADsB;AAMhCC,EAAAA,SAAS,EAAEV,GAAG,CACTM,MADM,GAENC,GAFM,CAEF,CAFE,EAEC,2CAFD,EAGNC,GAHM,CAGF,EAHE,EAGE,qBAHF,EAINC,QAJM,CAIG,yBAJH,CANqB;AAWhCE,EAAAA,KAAK,EAAEX,GAAG,CACLM,MADE,GAEFK,KAFE,CAEI,mBAFJ,EAGFF,QAHE,CAGO,qBAHP,CAXyB;AAehCG,EAAAA,OAAO,EAAEZ,GAAG,CAACM,MAAJ,GAAaG,QAAb,CAAsB,sBAAtB,CAfuB;AAgBhCI,EAAAA,UAAU,EAAEb,GAAG,CACVM,MADO,GAEPC,GAFO,CAEH,EAFG,EAEC,0CAFD,EAGPC,GAHO,CAGH,EAHG,EAGC,sBAHD,EAIPC,QAJO,CAIE,0BAJF,CAhBoB;AAqBhCK,EAAAA,UAAU,EAAEd,GAAG,CAACe,IAAJ,GAAWN,QAAX,CAAoB,6BAApB,CArBoB;AAsBhCO,EAAAA,YAAY,EAAEhB,GAAG,CACZM,MADS,GAETC,GAFS,CAEL,CAFK,EAEF,2CAFE,EAGTC,GAHS,CAGL,CAHK,EAGF,wBAHE,EAITC,QAJS,CAIA,4BAJA,CAtBkB,CA4BhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnDgC,CAAX,CAAzB;AAsDA,SACIN,gBADJ","sourcesContent":["import * as yup from \"yup\";\nvar valid = require(\"card-validator\");\n\n\nconst validationSchema = yup.object({\n    lastName: yup\n        .string()\n        .min(3, \"Last name must be at least 3 characters.\")\n        .max(50, \"Last name too long.\")\n        .required(\"Last name is required.\"),\n    firstName: yup\n        .string()\n        .min(3, \"First name must be at least 3 characters.\")\n        .max(50, \"First name too long\")\n        .required(\"First name is required.\"),\n    email: yup\n        .string()\n        .email(\"E-mail not valid.\")\n        .required(\"E-mail is required.\"),\n    address: yup.string().required(\"Address is required.\"),\n    cardNumber: yup\n        .string()\n        .min(16, \"Card number must be at least 16 numbers.\")\n        .max(18, \"Card number invalid.\")\n        .required(\"Credit card is required.\"),\n    expiration: yup.date().required(\"Expiration date is required\"),\n    securityCode: yup\n        .string()\n        .min(3, \"Security code must be at least 3 numbers.\")\n        .max(4, \"Security code invalid.\")\n        .required(\"Security code is required.\"),\n\n    //   cardNumber: yup\n    //     .string()\n    //     .test(\n    //       \"test-number\",\n    //       \"Credit Card number is invalid\",\n    //       (value) => valid.number(value).isValid\n    //     )\n    //     .required(\"Credit card number is required.\"),\n    //   expiration: yup\n    //     .string()\n    //     .test(                                                                  //Credit card validation - disabled for test reasons\n    //       \"test-expiration\",\n    //       \"Expiration date is invalid\",\n    //       (value) => valid.expirationDate(value).isValid\n    //     )\n    //     .required(\"Expiration date is required.\"),\n    //   securityCode: yup\n    //     .string()\n    //     .test(\n    //       \"test-cvv\",\n    //       \"Security code is invalid\",\n    //       (value) => valid.cvv(value).isValid\n    //     )\n    //     .required(\"Security code is required\"),\n});\n\nexport {\n    validationSchema\n};"]},"metadata":{},"sourceType":"module"}